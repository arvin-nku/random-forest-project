% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random_forest.R
\name{random_forest}
\alias{random_forest}
\title{Random Forest Algorithm}
\usage{
random_forest(
  x,
  y,
  data,
  type = NULL,
  B,
  A = NULL,
  m = 0,
  num_leaf = NULL,
  depth = NULL,
  num_split = 2,
  min_num = 1,
  unique = F
)
}
\arguments{
\item{x}{column name or list of column names of the input variable(s)}

\item{y}{column/list name of the target variable \cr
one dimensional vector}

\item{data}{named list or tibble containing the combined data of x and y}

\item{type}{“reg” for regression tree\cr
“cla” for classification tree\cr 
if `type` is missing, the function tries to guess the correct type#}

\item{B}{number of bootstrap samples to be created}

\item{A}{sample size to be used\cr
must be greater than 0 and less than or equal to the number of observations\cr
the default value corresponds to the total size of data}

\item{m}{positive number of coordinates used in each iteration\cr
the default value is the dimension of the data}

\item{num_leaf}{Termination condition: The tree has `num_leaf` leaves.\cr
Must be greater than or equal to 1\cr
The default value is the number of data-points}

\item{depth}{Termination condition: The tree has depth `depth`\cr
The default value is the maximum achievable depth}

\item{num_split}{only split nodes that contain at least `num_split` elements\cr
must be greater than or equal to 2}

\item{min_num}{only divides a nod if both child nodes at least `min_num` elements\cr
must be greater than or equal to 1}

\item{unique}{if `unique`is set to TRUE, nodes where all data points in this node have the the class are not split\cr
The default value is FALSE}
}
\value{
a list of `B` trees
}
\description{
Random Forest Algorithm for either regression or classification
}
\examples{
library(tibble)
X1 <- runif(100, 0, 1)
X2 <- runif(100, 0, 1)
e <- rnorm(100, 0, 0.1)
Y <- X1^2 + X2+ e
data_reg <- tibble(a = X1, b = X2, y = Y)
random_forest(x = c(a, b), y = Y, data = data_reg, type = "reg", B = 10, A = 20, m = 1, num_leaf = 10, depth = NULL, num_split = 2, min_num = 1)

X1 <- runif(100, 0, 1)
X2 <- runif(100, 0, 1)
e <- rnorm(100, 0, 0.1)
linear_comb <- 1.8 * X1 + 0.3 * X2 + e
Y <- ifelse(linear_comb > 1, 1, 2)
data_cla <- list(a = X1, b= X2, y = Y)
random_forest( x = c(a, b), y = Y, data = data_cla, type = "cla", B = 5, A = 10, m = 1, num_leaf = 10, depth = NULL, num_split = 2, min_num = 1, unique = FALSE)
}
